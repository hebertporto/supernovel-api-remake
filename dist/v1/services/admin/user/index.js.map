{"version":3,"sources":["../../../../../src/v1/services/admin/user/index.js"],"names":["router","Router","get","res","next","params","userId","then","status","json","payload","catch","error","post","body","message","put"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;AACA;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,GAAP,CAAW,UAAX,EAAuB,4DAAvB,EAAqD,gBAAaC,GAAb,EAAkBC,IAAlB,EAA2B;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MACtEC,MADsE,GAC3DD,MAD2D,CACtEC,MADsE;;AAE9E,yBAAYA,MAAZ,EACGC,IADH,CACQ;AAAA,WAAWJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,gBAAF,EAAWF,QAAQ,GAAnB,EAArB,CAAX;AAAA,GADR,EAEGG,KAFH,CAES;AAAA,WAASP,KAAKQ,KAAL,CAAT;AAAA,GAFT;AAGD,CALD;;AAOAZ,OAAOa,IAAP,CAAY,WAAZ,EAAyB,iBAAWV,GAAX,EAAgBC,IAAhB,EAAyB;AAAA,MAAtBU,IAAsB,SAAtBA,IAAsB;;AAChD,sBAASA,IAAT,EACGP,IADH,CACQ;AAAA,WAAWJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpCM,eAAS,yBAD2B;AAEpCL;AAFoC,KAArB,CAAX;AAAA,GADR,EAKGC,KALH,CAKS;AAAA,WAASP,KAAKQ,KAAL,CAAT;AAAA,GALT;AAMD,CAPD;;AASAZ,OAAOgB,GAAP,CAAW,SAAX,EAAsB,0DAAtB,EAAkD,iBAAWb,GAAX,EAAgBC,IAAhB,EAAyB;AAAA,MAAtBU,IAAsB,SAAtBA,IAAsB;AAAA,MACjER,MADiE,GACtDQ,IADsD,CACjER,MADiE;;AAEzE,oBAAOQ,IAAP,EAAaR,MAAb,EACGC,IADH,CACQ;AAAA,WAAWJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpCM,eAAS,8BAD2B;AAEpCL;AAFoC,KAArB,CAAX;AAAA,GADR,EAKGC,KALH,CAKS;AAAA,WAASP,KAAKQ,KAAL,CAAT;AAAA,GALT;AAMD,CARD;;kBAUeZ,M","file":"index.js","sourcesContent":["import express from 'express'\nimport validate from 'express-validation'\n\nimport { getUserById, register, update } from './../../../models/user'\nimport { findUserByIdSchema, updateUserSchema } from './schema'\n\nconst router = express.Router()\n\nrouter.get('/:userId', validate(findUserByIdSchema), ({ params }, res, next) => {\n  const { userId } = params\n  getUserById(userId)\n    .then(payload => res.status(200).json({ payload, status: 200 }))\n    .catch(error => next(error))\n})\n\nrouter.post('/register', ({ body }, res, next) => {\n  register(body)\n    .then(payload => res.status(201).json({\n      message: 'User Criado Com Sucesso',\n      payload,\n    }))\n    .catch(error => next(error))\n})\n\nrouter.put('/update', validate(updateUserSchema), ({ body }, res, next) => {\n  const { userId } = body\n  update(body, userId)\n    .then(payload => res.status(200).json({\n      message: 'User Atualizado com Sucesso.',\n      payload,\n    }))\n    .catch(error => next(error))\n})\n\nexport default router\n"]}