{"version":3,"sources":["../../../../../src/v1/services/admin/feature/index.js"],"names":["router","Router","post","single","res","next","body","file","then","status","json","payload","catch","error","get","params","query","featureId","currentPage","delete","put"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;AAEA;;;;AAOA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,IAAP,CAAY,GAAZ,EAAiB,eAAOC,MAAP,CAAc,MAAd,CAAjB,EAAwC,6DAAxC,EAAuE,gBAAiBC,GAAjB,EAAsBC,IAAtB,EAA+B;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;;AACpG,uBAAOD,IAAP,EAAaC,IAAb,EACGC,IADH,CACQ;AAAA,WAAWJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAArB,CAAX;AAAA,GADR,EAEGC,KAFH,CAES;AAAA,WAASP,KAAKQ,KAAL,CAAT;AAAA,GAFT;AAGD,CAJD;;AAMAb,OAAOc,GAAP,CAAW,cAAX,EAA2B,iBAAoBV,GAApB,EAAyBC,IAAzB,EAAkC;AAAA,MAA/BU,MAA+B,SAA/BA,MAA+B;AAAA,MAAvBC,KAAuB,SAAvBA,KAAuB;AAAA,MACnDC,SADmD,GACrCF,MADqC,CACnDE,SADmD;AAAA,MAEnDC,WAFmD,GAEnCF,KAFmC,CAEnDE,WAFmD;;AAG3D,kCAAkBD,SAAlB,EAA6BC,WAA7B,EACGV,IADH,CACQ;AAAA,WAAWJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAArB,CAAX;AAAA,GADR,EAEGC,KAFH,CAES;AAAA,WAASP,KAAKQ,KAAL,CAAT;AAAA,GAFT;AAGD,CAND;;AAQAb,OAAOmB,MAAP,CAAc,aAAd,EAA6B,iBAAaf,GAAb,EAAkBC,IAAlB,EAA2B;AAAA,MAAxBU,MAAwB,SAAxBA,MAAwB;AAAA,MAC9CE,SAD8C,GAChCF,MADgC,CAC9CE,SAD8C;;AAEtD,uBAAOA,SAAP,EACGT,IADH,CACQ;AAAA,WAAWJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAArB,CAAX;AAAA,GADR,EAEGC,KAFH,CAES;AAAA,WAASP,KAAKQ,KAAL,CAAT;AAAA,GAFT;AAGD,CALD;;AAOAb,OAAOoB,GAAP,CAAW,aAAX,EAA0B,eAAOjB,MAAP,CAAc,MAAd,CAA1B,EAAiD,iBAAyBC,GAAzB,EAA8BC,IAA9B,EAAuC;AAAA,MAApCC,IAAoC,SAApCA,IAAoC;AAAA,MAA9BS,MAA8B,SAA9BA,MAA8B;AAAA,MAAtBR,IAAsB,SAAtBA,IAAsB;AAAA,MAC9EU,SAD8E,GAChEF,MADgE,CAC9EE,SAD8E;;AAEtF,uBAAOX,IAAP,EAAaW,SAAb,EAAwBV,IAAxB,EACGC,IADH,CACQ;AAAA,WAAWJ,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,OAArB,CAAX;AAAA,GADR,EAEGC,KAFH,CAES;AAAA,WAASP,KAAKQ,KAAL,CAAT;AAAA,GAFT;AAGD,CALD;;kBAOeb,M","file":"index.js","sourcesContent":["import express from 'express'\nimport validate from 'express-validation'\nimport { upload } from './../../../utils/upload'\n\nimport { createFeatureSchema } from './schema'\n\nimport {\n  create,\n  findByIdOrFindAll,\n  remove,\n  update,\n} from './../../../models/feature'\n\nconst router = express.Router()\n\nrouter.post('/', upload.single('file'), validate(createFeatureSchema), ({ body, file }, res, next) => {\n  create(body, file)\n    .then(payload => res.status(201).json(payload))\n    .catch(error => next(error))\n})\n\nrouter.get('/:featureId?', ({ params, query }, res, next) => {\n  const { featureId } = params\n  const { currentPage } = query\n  findByIdOrFindAll(featureId, currentPage)\n    .then(payload => res.status(200).json(payload))\n    .catch(error => next(error))\n})\n\nrouter.delete('/:featureId', ({ params }, res, next) => {\n  const { featureId } = params\n  remove(featureId)\n    .then(payload => res.status(200).json(payload))\n    .catch(error => next(error))\n})\n\nrouter.put('/:featureId', upload.single('file'), ({ body, params, file }, res, next) => {\n  const { featureId } = params\n  update(body, featureId, file)\n    .then(payload => res.status(200).json(payload))\n    .catch(error => next(error))\n})\n\nexport default router\n"]}