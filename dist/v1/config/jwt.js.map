{"version":3,"sources":["../../../src/v1/config/jwt.js"],"names":["req","res","next","user","Object","_id","Admin","getUserById","hydrateUser","encode","secret","process","env","SECRET","decodeJWT","credentialsRequired","unless","data","sign"],"mappings":";;;;;;;;;;;;;;;;sFAeO,iBAA2BA,GAA3B,EAAgCC,GAAhC,EAAqCC,IAArC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEEF,IAAIG,IAFN;AAAA;AAAA;AAAA;;AAAA,kBAGKC,OAAO,oCAAP,CAHL;;AAAA;AAKKC,eALL,GAKaL,IAAIG,IALjB,CAKKE,GALL;;AAOH;;AAPG;AAAA,mBAQgBC,MAAMC,WAAN,CAAkBF,GAAlB,CARhB;;AAAA;AAQGF,gBARH;;AAAA,iBASCA,IATD;AAAA;AAAA;AAAA;;AAAA,6CAUMD,MAVN;;AAAA;AAAA,kBAYGE,OAAO,eAAP,CAZH;;AAAA;AAAA;AAAA;AAAA,6CAcIF,iBAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeM,W;;;;;QAJNC,M,GAAAA,M;;AAXhB;;;;AACA;;;;AACA;;;;AAEA;;IAAYH,K;;;;;;AAEZ,IAAMI,SAASC,QAAQC,GAAR,CAAYC,MAAZ,IAAsB,QAArC;AACO,IAAMC,gCAAY,0BAAW,EAAEJ,cAAF,EAAUK,qBAAqB,KAA/B,EAAX,CAAlB;;AAEPD,UAAUE,MAAV;;AAEO,SAASP,MAAT,CAAgBQ,IAAhB,EAAsB;AAC3B,SAAO,uBAAIC,IAAJ,CAASD,IAAT,EAAeP,MAAf,CAAP;AACD;;AAoBDF,YAAYQ,MAAZ","file":"jwt.js","sourcesContent":["import jwt from 'jsonwebtoken'\nimport expressjwt from 'express-jwt'\nimport unless from 'express-unless'\n\nimport * as Admin from './../models/user'\n\nconst secret = process.env.SECRET || 'secret'\nexport const decodeJWT = expressjwt({ secret, credentialsRequired: false })\n\ndecodeJWT.unless = unless\n\nexport function encode(data) {\n  return jwt.sign(data, secret)\n}\n\nexport async function hydrateUser(req, res, next) {\n  try {\n    if (!req.user) {\n      throw Object('Token is either missing or invalid')\n    }\n    const { _id } = req.user\n\n    // Search for an user\n    const user = await Admin.getUserById(_id)\n    if (user) {\n      return next()\n    }\n    throw Object('Invalid token')\n  } catch (e) {\n    return next(e)\n  }\n}\n\nhydrateUser.unless = unless\n"]}