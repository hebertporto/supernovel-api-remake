{"version":3,"sources":["../../../../src/v1/models/feature/index.js"],"names":["featuredModel","create","findAllActive","findByIdOrFindAll","remove","update","dUri","FeatureSchema","Schema","shownSince","type","Date","require","imagePath","String","active","Boolean","novel","SchemaTypes","ObjectId","ref","strict","timestamps","createdAt","updatedAt","model","Feature","createFeatured","data","save","then","result","catch","err","Object","message","status","payload","name","image","format","extname","originalname","toString","buffer","uploader","upload","content","featuredlWithImage","secure_url","aggregate","$match","$lookup","from","localField","foreignField","as","$project","_id","cover_url","Error","code","featuredId","currentPage","Types","findById","perPage","page","skip","limit","count","novels","pages","Math","ceil","contResult","exec","updateFeatured","body","findOneAndUpdate","$set","new","novelId","featureWithImage"],"mappings":"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","file":"index.js","sourcesContent":["import Datauri from 'datauri'\nimport path from 'path'\n\nimport mongoose from './../../config/db'\nimport { serviceCloudinary } from './../../utils/upload'\n\nimport {\n  CREATE_FEATURED_FAILED,\n  REMOVE_FEATURED_FAILED,\n  UPDATE_FEATURED_FAILED,\n} from './../../config/messages'\n\nconst dUri = new Datauri()\n\nconst FeatureSchema = new mongoose.Schema(\n  {\n    shownSince: {\n      type: Date,\n      require: true,\n    },\n    imagePath: {\n      type: String,\n    },\n    active: {\n      type: Boolean,\n      require: true,\n    },\n    novel: {\n      type: mongoose.SchemaTypes.ObjectId,\n      ref: 'Novel',\n      require: true,\n    },\n  },\n  {\n    strict: true,\n    timestamps: { createdAt: 'createdAt', updatedAt: 'updatedAt' },\n  },\n)\n\nexport function featuredModel() {\n  return mongoose.model('Feature', FeatureSchema)\n}\n\nconst Feature = featuredModel()\n\nfunction createFeatured(data) {\n  return new Feature(data)\n    .save()\n    .then(result => result)\n    .catch((err) => {\n      throw Object({\n        message: CREATE_FEATURED_FAILED,\n        status: 422,\n        payload: err.name,\n      })\n    })\n}\n\nexport function create(data, image) {\n  if (image) {\n    dUri.format(path.extname(image.originalname).toString(), image.buffer)\n    return serviceCloudinary.uploader.upload(dUri.content)\n      .then((result) => {\n        const featuredlWithImage = data\n        featuredlWithImage.imagePath = result.secure_url\n        return createFeatured(featuredlWithImage)\n      })\n      .catch((err) => {\n        if (err) {\n          throw Object({\n            message: CREATE_FEATURED_FAILED,\n            status: 422,\n            payload: err.name,\n          })\n        }\n      })\n  }\n  return createFeatured(data)\n}\n\nexport function findAllActive() {\n  return Feature.aggregate([\n    { $match: { active: true } },\n    {\n      $lookup: {\n        from: 'novels',\n        localField: 'novel',\n        foreignField: '_id',\n        as: 'novel',\n      },\n    },\n    {\n      $project: {\n        shownSince: 1,\n        imagePath: 1,\n        novel: {\n          _id: 1,\n          name: 1,\n          cover_url: 1,\n        },\n      },\n    },\n  ])\n    .then(payload => payload)\n    .catch((err) => {\n      throw new Error({\n        payload: err,\n        code: 500,\n      })\n    })\n}\n\nexport function findByIdOrFindAll(featuredId, currentPage) {\n  if (featuredId) {\n    const { ObjectId } = mongoose.Types\n    return Feature.findById(ObjectId(featuredId))\n      .then(result => result)\n      .catch((err) => {\n        throw new Error({\n          payload: err,\n          code: 500,\n        })\n      })\n  }\n  const perPage = 20\n  const page = currentPage || 1\n\n  return Feature.aggregate([\n    { $match: { active: true } },\n    {\n      $lookup: {\n        from: 'novels',\n        localField: 'novel',\n        foreignField: '_id',\n        as: 'novel',\n      },\n    },\n    {\n      $project: {\n        shownSince: 1,\n        imagePath: 1,\n        novel: {\n          _id: 1,\n          name: 1,\n          cover_url: 1,\n        },\n      },\n    },\n  ])\n    .skip((perPage * page) - perPage)\n    .limit(perPage)\n    .then(result => (\n      Feature\n        .count()\n        .then(contResult => ({\n          novels: result,\n          currentPage: page,\n          pages: Math.ceil(contResult / perPage),\n        }))\n        .catch((err) => {\n          throw new Error({\n            payload: err,\n            code: 500,\n          })\n        })\n    ))\n    .catch((err) => {\n      throw new Error({\n        payload: err,\n        code: 500,\n      })\n    })\n}\n\nexport function remove(featuredId) {\n  const { ObjectId } = mongoose.Types\n\n  return Feature.remove({ _id: ObjectId(featuredId) })\n    .exec()\n    .then(payload => payload)\n    .catch((err) => {\n      throw Object({\n        message: REMOVE_FEATURED_FAILED,\n        status: 422,\n        payload: err,\n      })\n    })\n}\n\nfunction updateFeatured(body, featuredId) {\n  const { ObjectId } = mongoose.Types\n\n  return Feature.findOneAndUpdate(\n    { _id: ObjectId(featuredId) },\n    { $set: body },\n    { new: true },\n  )\n    .then(payload => payload)\n    .catch((err) => {\n      throw new Error({\n        message: UPDATE_FEATURED_FAILED,\n        status: 422,\n        payload: err,\n      })\n    })\n}\n\nexport function update(data, novelId, image) {\n  if (image) {\n    dUri.format(path.extname(image.originalname).toString(), image.buffer)\n    return serviceCloudinary.uploader.upload(dUri.content)\n      .then((result) => {\n        const featureWithImage = data\n        featureWithImage.cover_url = result.secure_url\n        return updateFeatured(featureWithImage, novelId)\n      })\n      .catch((err) => {\n        if (err) {\n          throw Object({\n            message: UPDATE_FEATURED_FAILED,\n            status: 422,\n            payload: err.name,\n          })\n        }\n      })\n  }\n  return updateFeatured(data, novelId)\n}\n"]}